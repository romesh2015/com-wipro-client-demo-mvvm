apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.wipro.assignment.mvvm"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    kapt {
        generateStubs = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$android_core_ktx"
    implementation "androidx.appcompat:appcompat:$android_appcompact"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_to_refresh"
    // Androidx
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "androidx.cardview:cardview:$cardview"
    //Dagger
    implementation "com.google.dagger:dagger-android:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2"
    kapt "com.google.dagger:dagger-android-processor:$dagger2"
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    // Gson
    implementation "com.google.code.gson:gson:$gson"
    // JetPack
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
    // Retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_adapter"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_intercepter"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigation_ktx"

    //Coroutine Testing
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine"
    // JUnit
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test:runner:$runner"
    androidTestImplementation "androidx.test:rules:$runner"
    androidTestImplementation "androidx.test:core-ktx:$test_core_ktx"
    // Ui Automation testing with espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    // Mockito Testing
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin"
    testImplementation "org.mockito:mockito-inline:$mockito_inline"
    testImplementation "org.mockito:mockito-core:$mockito_core"
    // Arch Testing Lib
    testImplementation "androidx.arch.core:core-testing:$arch_core_testing"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_testing"

}